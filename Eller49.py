# Задача 49
# Перестановки простых чисел
# Арифметическая прогрессия: 1487, 4817, 8147, в которой каждый член возрастает на 3330,
# необычна в двух отношениях: (1) каждый из трех членов является простым числом, (2) все
# три четырехзначные числа являются перестановками друг друга.
#
# Не существует арифметических прогрессий из трех однозначных, двухзначных и трехзначных
# простых чисел, демонстрирующих это свойство. Однако, существует еще одна четырехзначная
# возрастающая арифметическая прогрессия.
#
# Какое 12-значное число образуется, если объединить три члена этой прогрессии?
from math import sqrt


def is_permutation(i1, i2):
    A = []
    B = []
    while i1 > 0:
        A.append(i1 % 10)
        i1 //= 10
    while i2 > 0:
        B.append(i2 % 10)
        i2 //= 10
    A.sort()
    B.sort()
    if A == B:
        return True
    return False


def is_simple(number):
    for i in range(2, int(sqrt(number) // 1 + 1)):
        if (number % i) == 0:
            return False
    return True


for i in range(1000, 10000):
    for n in range(1000, 10000):
        if i + n * 2 < 10000:
            if is_simple(i) and is_simple(i + n) and is_simple(i + 2 * n) and is_permutation(i,i + n) and is_permutation(i, i + n * 2):
                print(i, i + n, i + n * 2, n)
# 1487 4817 8147 3330
# 2969 6299 9629 3330